{"version":3,"sources":["SetList.js"],"names":["window","FC","undefined","SetList","state","sets","console","log","loadSets","UserData","data","setState","setId","$","ajax","url","method","done","ReactRouter","hashHistory","push","length","noSetsMessaging","map","set","id","name","cards","description","deleteSet","addCards","React","Component"],"mappings":";;;;;;;;;;AAAA,IAAIA,OAAOC,EAAP,KAAcC,SAAlB,EAA6B;AAAEF,SAAOC,EAAP,GAAY,EAAZ;AAAiB;;AAEhD,CAAC,YAAW;AAAA,MAEJE,OAFI;AAAA;;AAIR,uBAAc;AAAA;;AAAA;;AAGZ,YAAKC,KAAL,GAAa;AACXC,cAAM;AADK,OAAb;AAHY;AAMb;;AAVO;AAAA;AAAA,0CAYY;AAClBC,gBAAQC,GAAR,CAAY,qBAAZ;AACA,aAAKC,QAAL;AACD;AAfO;AAAA;AAAA,iCAiBG;AAAA;;AAETP,WAAGQ,QAAH,CAAYD,QAAZ,CAAqB,UAACE,IAAD,EAAU;AAC7B,iBAAKC,QAAL,CAAc;AACZN,kBAAMK,KAAKL;AADC,WAAd;AAGD,SAJD;AAMD;AAzBO;AAAA;AAAA,gCA2BEO,KA3BF,EA2BS;AAAA;;AACfN,gBAAQC,GAAR,CAAY,cAAZ;;AAEAM,UAAEC,IAAF,CAAO;AACLC,eAAK,eAAeH,KADf;AAELI,kBAAQ;AAFH,SAAP,EAICC,IAJD,CAIM,YAAM;AACVX,kBAAQC,GAAR,CAAY,eAAZ;AACA,iBAAKC,QAAL;AACD,SAPD;AAQD;AAtCO;AAAA;AAAA,+BAwCCI,KAxCD,EAwCQ;AACdM,oBAAYC,WAAZ,CAAwBC,IAAxB,CAA6B,UAAUR,KAAvC;AACD;AA1CO;AAAA;AAAA,+BA4CC;AAAA;;AACPN,gBAAQC,GAAR,CAAY,oBAAZ,EAAkC,KAAKH,KAAL,CAAWC,IAAX,CAAgBgB,MAAlD;;AAEA,YAAIC,eAAJ;AACA,YAAI,KAAKlB,KAAL,CAAWC,IAAX,CAAgBgB,MAAhB,KAA2B,CAA/B,EAAkC;AAChCC,4BAAkB;AAAA;AAAA;AAAA;AAAA,WAAlB;AACD;;AAED,eAAO;AAAA;AAAA,YAAK,WAAU,UAAf;AACL;AAAA;AAAA;AAAA;AAAA,WADK;AAGJA,yBAHI;AAKL;AAAC,uBAAD,CAAa,IAAb;AAAA,cAAkB,IAAG,aAArB;AAAA;AAAA,WALK;AAOL;AAAA;AAAA;AACC,iBAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,GAAhB,CAAoB,UAACC,GAAD,EAAS;AAC5B,qBAAO;AAAA;AAAA,kBAAI,WAAU,KAAd,EAAoB,KAAKA,IAAIC,EAA7B;AACL;AAAA;AAAA,oBAAK,WAAU,UAAf;AAA2BD,sBAAIE;AAA/B,iBADK;AAEL;AAAA;AAAA,oBAAK,WAAU,iBAAf;AAAA;AAA8CF,sBAAIG,KAAJ,CAAUN;AAAxD,iBAFK;AAGL;AAAA;AAAA;AAAIG,sBAAII;AAAR,iBAHK;AAKL;AAAA;AAAA,oBAAK,WAAU,YAAf,EAA4B,SAAS,mBAAM;AAAC,6BAAKC,SAAL,CAAeL,IAAIC,EAAnB;AAAuB,qBAAnE;AAAA;AAAA,iBALK;AAML;AAAA;AAAA,oBAAK,WAAU,WAAf,EAA2B,SAAS,mBAAM;AAAC,6BAAKK,QAAL,CAAcN,IAAIC,EAAlB;AAAsB,qBAAjE;AAAA;AAAA;AANK,eAAP;AASD,aAVA;AADD;AAPK,SAAP;AAqBD;AAzEO;;AAAA;AAAA,IAEYM,MAAMC,SAFlB;;AA4EV/B,KAAGE,OAAH,GAAaA,OAAb;AACD,CA7ED","file":"SetList.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetList extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        sets: []\n      }\n    }\n\n    componentDidMount() {\n      console.log('component did mount');\n      this.loadSets();\n    }\n\n    loadSets() {\n\n      FC.UserData.loadSets((data) => {\n        this.setState({\n          sets: data.sets\n        });\n      });\n            \n    }\n\n    deleteSet(setId) {\n      console.log('deleting set');\n\n      $.ajax({\n        url: '/api/sets/' + setId,\n        method: 'DELETE'\n      })\n      .done(() => {\n        console.log('done deleting');\n        this.loadSets();\n      });\n    }\n\n    addCards(setId) {\n      ReactRouter.hashHistory.push('/set/' + setId);\n    }\n\n    render() {\n      console.log('rendering set list', this.state.sets.length);\n\n      var noSetsMessaging;\n      if (this.state.sets.length === 0) {\n        noSetsMessaging = <p>You do not have any sets! Create one.</p>\n      }\n\n      return <div className=\"set-list\">\n        <h2>Set List</h2>\n\n        {noSetsMessaging}\n\n        <ReactRouter.Link to=\"/create-set\">Create new set</ReactRouter.Link>\n\n        <ul>\n        {this.state.sets.map((set) => {\n          return <li className=\"set\" key={set.id}>\n            <div className=\"set-name\">{set.name}</div>\n            <div className=\"number-of-cards\"># of cards: {set.cards.length}</div>\n            <p>{set.description}</p>\n\n            <div className=\"delete-set\" onClick={() => {this.deleteSet(set.id)}}>delete</div>\n            <div className=\"add-cards\" onClick={() => {this.addCards(set.id)}}>add cards</div>\n\n          </li>\n        })}\n        </ul>\n      </div>;\n    }\n  }\n\n  FC.SetList = SetList;\n})();\n"]}