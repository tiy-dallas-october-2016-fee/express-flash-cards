{"version":3,"sources":["App.js","CardEditorComponent.js","QuizSummaryComponent.js","QuizzerComponent.js","SetEditorComponent.js","SetListComponent.js","SetViewComponent.js","gallery.js"],"names":["window","FC","undefined","AppComponent","props","children","React","Component","CardEditorComponent","evt","preventDefault","cb","ReactRouter","browserHistory","goBack","UserData","addCardToSet","params","setId","frontInput","value","backInput","submitCard","input","canvasHeight","canvasTopPadding","canvasHorizontalPadding","canvasBarWidth","availableDrawHeight","correctColor","incorrectColor","skippedColor","QuizSummaryComponent","ctx","canvas","getContext","drawBar","correct","incorrect","skipped","percentageHeight","color","spot","console","log","barHeight","xloc","yloc","fillStyle","fillRect","dom","QuizzerComponent","state","currentCard","showFront","set","shuffledCards","_","shuffle","cards","slice","sliceEnd","length","slideEnd","correctCount","incorrectCount","skippedCount","setState","createNewQuizState","getSet","copiedState","Object","assign","card","incrementCorrectCountOnCard","id","incrementIncorrectCountOnCard","cardShower","cardNavigation","summary","summaryNavigation","textToShow","front","back","cardClicked","markCorrect","markIncorrect","skip","SetEditorComponent","$","ajax","url","method","data","name","nameInput","description","descriptionInput","done","submitSet","SetListComponent","sets","sortBy","loadSets","clonedArray","sort","a","b","hashHistory","push","noSetsMessaging","sortingClass","sortByName","sortByCardCount","map","index","deleteSet","addCards","navigateToQuiz","SetViewComponent","cardList","mountNode","document","querySelector","GalleryComponent","ReactDOM","render"],"mappings":"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","file":"gallery.js","sourcesContent":["if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class AppComponent extends React.Component {\n    render() {\n      return <div>\n\n        {this.props.children}\n\n      </div>;\n    }\n  }\n\n  FC.AppComponent = AppComponent;\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class CardEditorComponent extends React.Component {\n\n    submitCard(evt) {\n      evt.preventDefault();\n\n      var cb = () => {\n        ReactRouter.browserHistory.goBack();\n      };\n\n      FC.UserData.addCardToSet(this.props.params.setId, this.frontInput.value, this.backInput.value, cb);\n    }\n\n    render() {\n      return <div className=\"card-editor\">\n        <h2>The Card Editor</h2>\n\n        <form onSubmit={(evt) => { this.submitCard(evt);}}>\n\n          <input placeholder=\"front\" ref={(input) => {this.frontInput = input; }} />\n\n          <input placeholder=\"back\" ref={(input) => {this.backInput = input; }} />\n\n          <button>Save</button>\n\n        </form>\n\n      </div>;\n    }\n\n  }\n\n  FC.CardEditorComponent = CardEditorComponent;\n\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  const canvasHeight = 100;\n  const canvasTopPadding = 10;\n  const canvasHorizontalPadding = 10;\n  const canvasBarWidth = 60;\n  const availableDrawHeight = 90;\n  const correctColor = '#367c27';\n  const incorrectColor = '#F00';\n  const skippedColor = '#000';\n\n  class QuizSummaryComponent extends React.Component {\n\n    componentDidMount() {\n      var ctx = this.canvas.getContext('2d');\n\n      this.drawBar(this.props.correct / 10, correctColor, 0, ctx);\n      this.drawBar(this.props.incorrect / 10, incorrectColor, 1, ctx);\n      this.drawBar(this.props.skipped / 10, skippedColor, 2, ctx);\n    }\n\n    drawBar(percentageHeight, color, spot, ctx) {\n      console.log(percentageHeight);\n\n      let barHeight = availableDrawHeight * percentageHeight;\n      let xloc = (canvasBarWidth * spot) + (canvasHorizontalPadding * (spot + 1));\n      let yloc = canvasHeight - barHeight;\n\n      ctx.fillStyle = color;\n      console.log('draw at x', xloc);\n      ctx.fillRect(xloc, yloc, canvasBarWidth, barHeight);\n    }\n\n    render() {\n      return <div className=\"quiz-summary-component\">\n        <h2>Summary</h2>\n\n        <p className=\"correct\" style={{ color: correctColor }}>Correct: {this.props.correct}</p>\n        <p className=\"incorrect\" style={{ color: incorrectColor }}>Incorrect: {this.props.incorrect}</p>\n        <p className=\"skipped\" style={{ color: skippedColor }}>Skipped: {this.props.skipped}</p>\n        <canvas width=\"220\" height={canvasHeight} ref={(dom) => { this.canvas = dom; }}></canvas>\n\n      </div>\n    }\n\n  }\n\n  FC.QuizSummaryComponent = QuizSummaryComponent;\n\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class QuizzerComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        currentCard: 0,\n        showFront: true\n      }\n    }\n\n    createNewQuizState(set) {\n      var shuffledCards = _.shuffle(set.cards.slice(0));\n      var sliceEnd = 10;\n      if (shuffledCards.length < 10) {\n        slideEnd = shuffledCards.length;\n      }\n      shuffledCards = shuffledCards.slice(0, sliceEnd);\n      return {\n        cards: shuffledCards,\n        currentCard: 0,\n        showFront: true,\n        correctCount: 0,\n        incorrectCount: 0,\n        skippedCount: 0\n      };\n    }\n\n    componentDidMount() {\n\n      var cb = (set) => {\n        this.setState(this.createNewQuizState(set));\n      };\n\n      FC.UserData.getSet(this.props.params.setId, cb);\n\n    }\n\n    cardClicked() {\n      var copiedState = Object.assign({}, this.state);\n      copiedState.showFront = !copiedState.showFront;\n\n      this.setState(copiedState);\n    }\n\n    markCorrect() {\n\n      var card = this.state.cards[this.state.currentCard];\n      card.correctCount += 1;\n      FC.UserData.incrementCorrectCountOnCard(this.props.params.setId, card.id, () => {});\n\n      var copiedState = Object.assign({}, this.state);\n      copiedState.currentCard += 1;\n      copiedState.correctCount += 1;\n      this.setState(copiedState);\n    }\n\n    markIncorrect() {\n      var card = this.state.cards[this.state.currentCard];\n      card.incorrectCount += 1;\n      FC.UserData.incrementIncorrectCountOnCard(this.props.params.setId, card.id, () => {});\n\n      var copiedState = Object.assign({}, this.state);\n      copiedState.currentCard += 1;\n      copiedState.incorrectCount += 1;\n      this.setState(copiedState);\n    }\n\n    skip() {\n      var copiedState = Object.assign({}, this.state);\n      copiedState.currentCard += 1;\n      copiedState.skippedCount += 1;\n      this.setState(copiedState);\n    }\n\n    render() {\n      var cardShower;\n      var cardNavigation;\n      var summary;\n      var summaryNavigation;\n\n      if (this.state.cards !== undefined && this.state.currentCard != this.state.cards.length) {\n        var currentCard = this.state.cards[this.state.currentCard];\n        var textToShow = this.state.showFront ? currentCard.front: currentCard.back;\n\n        cardShower = <div>\n          <div>Card count: {this.state.cards.length}</div>\n          <div\n            className=\"card\"\n            onClick={(evt) => { this.cardClicked(evt); }}>\n            {textToShow}</div>\n        </div>\n\n\n        cardNavigation = <div className=\"card-navigation\">\n          <div className=\"correct\" onClick={() => { this.markCorrect();}}>Correct</div>\n          <div className=\"incorrect\" onClick={() => {this.markIncorrect();}}>Incorrect</div>\n          <div className=\"skip\" onClick={() => {this.skip();}}>Skip</div>\n\n        </div>;\n      }\n      else {\n        summary = <FC.QuizSummaryComponent\n          correct={this.state.correctCount}\n          incorrect={this.state.incorrectCount}\n          skipped={this.state.skippedCount} />\n\n        summaryNavigation = <div className=\"summary-choices\">\n            <div>Quiz again</div>\n            <div>Back to set list</div>\n          </div>;\n      }\n\n      return <div className=\"quizzer\">\n        <h2>The Quizzer</h2>\n\n        {summary}\n        {summaryNavigation}\n        {cardShower}\n        {cardNavigation}\n      </div>\n    }\n\n  }\n\n  FC.QuizzerComponent = QuizzerComponent;\n\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetEditorComponent extends React.Component {\n\n    submitSet(evt) {\n      evt.preventDefault();\n\n      $.ajax({\n        url: '/api/sets',\n        method: 'POST',\n        data: {\n          name: this.nameInput.value,\n          description: this.descriptionInput.value\n        }\n      })\n      .done((data) => {\n        ReactRouter.browserHistory.goBack();\n      });\n\n\n    }\n\n    render() {\n      return <div className=\"set-editor\">\n        <h2>Set Editor</h2>\n\n        <form onSubmit={(evt) => { this.submitSet(evt); }}>\n\n          <input placeholder=\"name\" ref={(input) => { this.nameInput = input; }} />\n\n          <input placeholder=\"description\" ref={(input) => { this.descriptionInput = input; }} />\n\n          <button>Save</button>\n        </form>\n      </div>\n    }\n\n  }\n\n  FC.SetEditorComponent = SetEditorComponent;\n\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetListComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        sets: [],\n        sortBy: 'name'\n      }\n    }\n\n    componentDidMount() {\n      this.loadSets();\n    }\n\n    loadSets() {\n\n      FC.UserData.loadSets((data) => {\n        this.setState({\n          sets: data.sets,\n          sortBy: this.state.sortBy\n        });\n      });\n\n    }\n\n    sortByName() {\n      var clonedArray = this.state.sets.slice(0);\n      clonedArray = clonedArray.sort((a, b) => { return a.name > b.name; });\n\n      this.setState({\n        sets: clonedArray,\n        sortBy: 'name'\n      });\n    }\n\n    sortByCardCount() {\n      var clonedArray = this.state.sets.slice(0);\n      clonedArray = clonedArray.sort((a, b) => { return a.cards.length < b.cards.length; });\n\n      this.setState({\n        sets: clonedArray,\n        sortBy: 'cardCount'\n      });\n    }\n\n    deleteSet(setId) {\n      $.ajax({\n        url: '/api/sets/' + setId,\n        method: 'DELETE'\n      })\n      .done(() => {\n        this.loadSets();\n      });\n    }\n\n    addCards(setId) {\n      ReactRouter.hashHistory.push('/set/' + setId);\n    }\n\n    navigateToQuiz(setId) {\n      ReactRouter.hashHistory.push('/set/' + setId + '/quizzer');\n    }\n\n    render() {\n      var noSetsMessaging;\n      if (this.state.sets.length === 0) {\n        noSetsMessaging = <p>You do not have any sets! Create one.</p>\n      }\n\n      var sortingClass = 'sorting ';\n      if (this.state.sortBy === 'name') {\n        sortingClass += 'by-name';\n      }\n      else {\n        sortingClass += 'by-count';\n      }\n\n      return <div className=\"set-list\">\n        <h2>Set List</h2>\n\n        {noSetsMessaging}\n\n        <ReactRouter.Link to=\"/create-set\" className=\"create-set\">Create new set</ReactRouter.Link>\n\n        <div className={sortingClass}>\n          <div className=\"by-name\" onClick={() => this.sortByName() }>by name</div>\n          <div className=\"by-card-count\" onClick={() => this.sortByCardCount() }>by # of cards</div>\n        </div>\n\n        <ul>\n        {this.state.sets.map((set, index) => {\n          return <li key={set.id} className=\"set\">\n            <div className=\"set-name\">{set.name}</div>\n            <div className=\"number-of-cards\"># of cards: {set.cards.length}</div>\n            <p>{set.description}</p>\n\n            <div className=\"button delete-set\" onClick={() => {this.deleteSet(set.id)}}>delete</div>\n            <div className=\"button add-cards\" onClick={() => {this.addCards(set.id)}}>add cards</div>\n            <div className=\"button quiz\" onClick={() => {this.navigateToQuiz(set.id)}}>quiz</div>\n\n          </li>\n        })}\n        </ul>\n      </div>;\n    }\n  }\n\n  FC.SetListComponent = SetListComponent;\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  class SetViewComponent extends React.Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        name: '',\n        cards: []\n      }\n    }\n\n    componentDidMount() {\n      var cb = (set) => {\n        this.setState({\n          name: set.name,\n          cards: set.cards\n        });\n      };\n\n      FC.UserData.getSet(this.props.params.setId, cb);\n    }\n\n    render() {\n\n      var cardList;\n      if (this.state.cards.length === 0) {\n        cardList = <div>You have no cards.</div>\n      }\n      else {\n        cardList = <ul>\n          {this.state.cards.map((card) => {\n            return <li key={card.id} className=\"card\">\n              <div className=\"front\">Front: {card.front}</div>\n              <div className=\"back\">Back: {card.back}</div>\n            </li>\n          })}\n        </ul>;\n      }\n\n      return <div className=\"set-component\">\n        <h2>Set: {this.state.name} (id: {this.props.params.setId})</h2>\n\n        <div className=\"controls\">\n          <ul>\n            <li><ReactRouter.Link to={'/set/' + this.props.params.setId + '/newcard'}>Add a New Card</ReactRouter.Link></li>\n            <li><ReactRouter.Link to={'/set/' + this.props.params.setId + '/quizzer'}>Quizzer</ReactRouter.Link></li>\n          </ul>\n\n\n        </div>\n\n        {cardList}\n      </div>\n    }\n\n  }\n\n  FC.SetViewComponent = SetViewComponent;\n\n})();\n","if (window.FC === undefined) { window.FC = {}; }\n\n(function() {\n\n  var mountNode = document.querySelector('#react-root');\n\n  class GalleryComponent extends React.Component {\n\n    render() {\n      return <div>\n        <h1>Gallery</h1>\n        <FC.QuizSummaryComponent\n          correct={5}\n          incorrect={5}\n          skipped={0}\n          />\n\n        <FC.QuizSummaryComponent\n          correct={2}\n          incorrect={1}\n          skipped={7}\n          />\n\n\n\n      </div>\n    }\n\n  }\n\n  ReactDOM.render(<GalleryComponent />, mountNode);\n\n})();\n"]}